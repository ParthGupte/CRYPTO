from modmatrices import *
import inverse
base = 127
chunk_size = 20

def vec_encrypt(p,k):
    if isinstance(p,ModMatix) and isinstance(k,ModMatix):
        if p.isvector():
            k.multiply(p)
            k.value()
            return k
        else:
            print("p is not a vector")
    else:
        print("Enter valid ModMatix objects")

def vectoascii(vec):
    if vec.isvector():
        txt = ''
        for row in vec.array:
            i = int(row[0])
            if i<32:
                txt += chr(161+i)
            else:
                txt += chr(i)
        return txt
    else:
        print("Input should be vector")

# def keytomatix(key):
#     key_list = [np.array([[106, 116,   1,  15,  55,  81,  64,  64,   1, 116,  30,  65,  72,
#         114,  93,  74,  25,  56, 111, 120],
#        [ 48,   6,  83,  81,  97,  65,  48,  46,  92,  39,  52,  73,  81,
#          43,  65,  22,  99,  87, 106,  83],
#        [113,  71, 119,  58,  25,  91,  99,  79,  96,  58,  88,  35,  76,
#           7,  58,  97,  90,  15,  49,  78],
#        [ 61,  46,  67,  98,  36,  26,  10, 111,  44,  86,  21, 124,   9,
#          50,  55,  78,   2,   3,  81,  43],
#        [ 39,  34, 122,  88,  37, 106,  48,  85,  66,  46,  43,  60, 106,
#         108,  82,  63,  84,  89,  59, 118],
#        [ 11,   7,  55,   4,  85,  37,  40,  54,  56, 126,  51,  82,  37,
#         112,  30,  84,  34,  62, 107,  84],
#        [ 79,  73,  47,  81, 122, 125, 118,  55,  90,  89,  60,  71,  40,
#         122,  96, 120,  58,  18, 121,  33],
#        [ 64, 100,  83, 111, 109,   2,  32,  20,  61,  33,  46,  89,  44,
#         115,  67,  45, 121,  26,   7,  93],
#        [  5,  25,  40, 118,  77,  14,  42, 101,  43,  58,  18, 122,  90,
#           5, 120,  64,  70,  84,  27,  40],
#        [  5,  95,  62,  76, 117, 117, 122, 106,  67, 119, 118,  40,  19,
#          17,  37,  37, 108,  57,  78, 118],
#        [ 73,  96,   5,  77, 113, 106, 106, 112,  54, 115,  70,  35,  89,
#          17,  22,   4,  78,  10,   4,  60],
#        [102,  78,  35,  74,  17,  30,   3, 100,  72, 122,  39,  74,  72,
#         117,  51,  24,  16,  93,  20, 105],
#        [  9, 115,  41,  35,  54,  42,  12,  14, 103,  63,  16, 115, 104,
#         102,  17,  33,  25,  75,  74,  59],
#        [  5,   1,  10,  95,   3,  15, 102, 107,  54, 116, 102,  99, 111,
#           4,  26,  99,  75,  85,   2, 106],
#        [ 17, 126,  77,  57,  49, 105, 111,  26, 124, 105,  13,  77, 122,
#          43,  59,  98, 112,  56,  96,  73],
#        [107,  48,   6,  86,   1, 125, 115, 115,  26,  36,  61,  86, 106,
#         110,  10,   4, 105, 110,  25,  71],
#        [114,  93, 104, 110,   9,  60,   5,  32, 122, 111,  71,  85,  81,
#          79, 103,  45,  88,  18,  46, 113],
#        [112,  77,  33,   2, 126,  39, 120,  22,  29,  42, 119, 115, 116,
#         121,  13,  89,  77,   9,  35,  54],
#        [ 86, 103,  92,  13,  48,  50,  73,  58, 102,   5,   4,  43,  19,
#          81,  99,  77,   7, 114,  48,   1],
#        [ 27, 108,  50,  40,  18,  75, 126, 121,  49,   3,  39,  72,  84,
#          92, 122, 102, 101, 119,   5, 121]], dtype='int64'), np.array([[  8,  32,  41, 117,  40,  95,  66,  45,  78,  19,  36,  23, 126,
#          59, 118,  41,  89,  66,  28, 125],
#        [ 98,  78,  12,  69,  98, 126,  16, 100,   9,   4,   9,  48,  98,
#         102,  26,  86,  39, 103,  63,  40],
#        [ 90, 125, 107,  76,  68, 120, 114,  20,  32, 122,  42,   3,  15,
#          45, 125, 119,  44,  35,  47,  46],
#        [ 72, 114,  28,  70,  40,  87,  84,  64,  80,  66, 100,  45,  51,
#         109,   8, 105,  14,  90,  73,  51],
#        [101,   7,  90,  57,  78,  73,  89,   4,  22,  28,  35,  19,  31,
#         108,  55,  58,  78,  17,  68,  58],
#        [119, 126, 109,  48,  82,  56,  16,  39,  74,  34, 119, 107,  49,
#          70,  37, 119, 124,  60,  79, 110],
#        [ 37,  95, 122,  37, 121,   1, 123,  94,  70,  50,  42,  71,  74,
#         106,  28,   6,  22,  37,  25,  46],
#        [ 26, 118,  36, 125,  42,  39, 103,  74,  69,   0,  36,  21,  15,
#          69,  95,  74,  73,  65,  35, 102],
#        [ 72,  84,  30,  43,  86,  76,  67,  95,  74,  29,  31, 107,  70,
#          19,   3,   0,  47,  61,  40, 114],
#        [ 85,  55,  49,  65,  57,   1,  13,  79,  71,  73,  93,  59,  70,
#          96,  42,  73,   2,  70,  85,  99],
#        [ 53,  72, 124,  89,  80,  81,  94,   5,   9,  22, 118,  34,   8,
#          72,  44, 124, 101,  12,  86,  45],
#        [ 73,  16,  52,  27,  70,   8,  12,  31,  13,  15,  12,  17,   3,
#         125,  23,  50,  85, 106, 111,  82],
#        [  4,  73,  43,  63,  80,  92,  43,  25, 112,  87,  11,  54,  81,
#          57,  81, 102, 116,  44,  40,  27],
#        [ 23,  30,  35,  37,  96,  49,   4,  52,   2,  13,  86,  88,  71,
#          36,  40,  95,  11,  63,  95,  46],
#        [ 30,  88,  63,  13, 101,  38,  60,  15,  42,  38,  75,  17,  99,
#         107,   5,   0,  72, 110,  15,  86],
#        [ 33, 111,  10,  98,  29,  13, 119,  31,  29,  64,  88,   9,  27,
#         112,  65, 102, 104,  94,  44,  95],
#        [  8,  80, 105, 123,  88,  32,  48,  52,   3,  51, 104,  28,  52,
#         125,  71, 104,  40,  39, 113,  59],
#        [114, 119,  60,  37, 104, 105,  55, 118,  12,  68,   9,  97,  80,
#          19,   0,  14,  59,  18, 108,  50],
#        [120, 119,  81, 112,  75,  19, 105,  51,  43, 117, 115,  54,  58,
#         103,   8,  12,  73, 125,  42,  11],
#        [ 77, 126,  92,  24,   0,  45,  79, 125,  12,  92,  41,  92,  42,
#          77,  66,  18,  20,  68,  93,  94]], dtype='int64'), np.array([[ 81,  24,  67,  17,  12,  70,  41,  25,   0,  72,  20,  39,  85,
#          39,  93,  97,  41, 113,  72,  61],
#        [ 53, 112,  61,  68,  88,  79,  25,  27,  50,  44,  49,  18,  54,
#          72,  93,  87,  57,  57, 110,  13],
#        [ 14, 105,  52,  14, 110,  87, 101,  23, 117, 102, 121,  52, 123,
#          24,  21, 116,  96,  51,  29, 109],
#        [ 59, 102,  74,  20,  69,  39,  71, 126,  10,  66,  56,  10,  72,
#          74,  90,  84, 121,  75,  42,  92],
#        [ 17,  44,  40, 109,   4,  14,  34, 124,  91,  54,  74,  77,  54,
#         106,   9,  69,  94, 125,  12,  26],
#        [ 10, 114, 118,  44,  35,  49,  81,  87,  81,  29,  72, 122,  29,
#          51,  50,  57,  56,  86,   8,   3],
#        [ 42,  73, 104,  39,  68,  12,  76,  93,  53, 101,  84,  60,  80,
#          46,  41, 119,   4,  72,  19,  24],
#        [ 68,  62, 120, 115, 120,   4, 105,   7,  80,  11,  43,  34,  18,
#          41,  21,  89,  25,  99,  14,  33],
#        [ 63,  44,  38,  64,  18,  95,  72,  45,  88,  63,  96,  79,  42,
#          43,  54,  16,  99,   6,  15,  58],
#        [114,  41,  50,  93,  33, 122,  82,  43, 114,   3, 107,  33, 119,
#          20,  27,  45,  37,  44, 122, 112],
#        [ 20,  24,  49,  92, 105,  89,  59,  20,  30,  22, 102, 105,  93,
#          27,   9,   7,   8,  85,  55,  22],
#        [118,   4,  43,  36,  19,  38,  84,  68,  77, 120,  77,   6,  97,
#          45,  77,  96,  12,  79,  89, 125],
#        [ 37,  71,  32,   9,  73,  88, 101,  70,  20,  26, 125,  52,  15,
#         110,  42,  61,  17, 105,  79,  65],
#        [103,  69,  51,  96,   2,  86,  95,   9,  39,  68,  81,   7,  20,
#          36,  38,  18,  10,  34,   4,  38],
#        [118, 125,  17,   2,   0,  98,  62,  53,  65,  39,  71, 109, 100,
#          22, 103,  33,   0,  55,  50,  24],
#        [105,  43, 109,  46,  15,  39, 115, 112,  27,  75,  67,  25,  52,
#          12,  18,   3, 123,  19, 108, 109],
#        [103,  29, 103,  30,  89, 126,   4, 112, 110,  94,  13,  31,   9,
#         119,  33,   0,  73,   4,  97,  99],
#        [ 55,  78,  17, 124,   8,  35, 113, 125,  95,  38,  60,  28,  28,
#         114,  43,  57,  94,  74,   2,  74],
#        [101,  77,  69,  57,  19,  70, 113, 125,  38,  38, 107,  87,  34,
#          16, 113,   1, 121,  86,  40,   2],
#        [ 67,  69, 110,  83,   6, 103,  96,  71,  21,  22,  40,  42,   7,
#          42, 119, 123,  93,  99,   1, 109]], dtype='int64'), np.array([[ 34,  30,   7,  35,  30,  20,  44, 107,  31,  86,  45, 104,   9,
#          39,  50,  34,  69, 112,  21,  64],
#        [ 46,  48,  75,  44,  99,  11,  18,   6,  96,  39,  44, 109,  11,
#           1,  23,   6,  48,  38, 120,  99],
#        [114,  13,  47, 124,  27,  83,  38,  20,  94,  47, 124,  84,  12,
#          46,  43,  77,  93,  45,  62,  79],
#        [ 55,   4,  57,  71,  35,  87,  39, 121,  67,  28,  84,  51, 112,
#          90,  84,  57,   9, 122,  57,  44],
#        [123,  88,  16,  23, 102,  37,  56,   3,  41, 123,  82,   3,  56,
#         107,  33,  59,  44,  86,  41,  51],
#        [105,  75,  82,  94, 115,  63,  49,  68, 122,  85,  77,  53,  23,
#          99,  20, 101, 122,  60,  25,  94],
#        [ 62, 110, 112, 108,  12,  51,  87, 106, 105,  64, 102, 125,  19,
#         108,  34,  57, 112,  36,  45,  99],
#        [110,   2,  94,  37, 105,  26,  42,  69,  64,   8,  96, 117, 126,
#          63, 119,  13,  79, 110,  23,  78],
#        [ 13,  34,  31, 122,  84,  41,   9, 123,   0, 105,  10,  18,  25,
#           2,  28,  75,  21,   7,  18,  12],
#        [ 13,  40,  25,  85,  95,   5,  95,  76,  91,  80,  90,  12,   0,
#          75,   0, 114,  85,  47,  93,  11],
#        [105,  57,  28,  20,   7,  20,  86,  64,  82,  50,  58,  10,  17,
#          17,  18, 112,  62,   8,   4, 109],
#        [  5, 125,  63,   7,  19,  30,  56, 102, 108,   3,  63,  66,  55,
#          76,  61,  32,  98,  88, 123,  72],
#        [122,  66,  77, 106,   5,  99, 117, 110,   5,  36,  46,  38,  22,
#          58,  16, 112,  55,  39,  59,  56],
#        [111,  10,  42,  53,  51,  38,  62,  48,  55,   9,  61,  23, 107,
#          76,   3, 121,  39,  66,  46,  66],
#        [ 97, 124,  33,  89, 123,  93,  65,  86,   4,  23,  28,  98,  26,
#          10,  13,   7,  65,   1,  52, 121],
#        [ 95,  39,  17,  33,  23,  73,  13,  15,  34,  35, 114, 118, 109,
#         112, 108, 122, 113, 106,  23,  41],
#        [118, 102,   2,   1,  56,  68, 107,  59,  71,  87,  94,  88,  30,
#          97,  92, 113,   9, 105, 115,  84],
#        [123,  70,  97,  50,  45,   5,  51,  96, 119,  18, 110,  73,  25,
#          59,  39, 125,   6,  58, 120, 108],
#        [ 53,  68,  92,   0,  24,  38,  63,  12,  64,  94,  51,  33,  14,
#          46,  97, 110,  40,  90, 103,   0],
#        [ 49,  85,  30,  54,  99,  79,  13,  19,  54,  31,  11,  51,  88,
#          30,  61,   3,  13,  23,   7,  56]], dtype='int64'), np.array([[  6,  43, 117,  32,   9,  64,  36,  56,  80,  11,  95,  38,  41,
#          21,  98,  22,  37, 103,  61, 105],
#        [ 46, 104,  58, 112,   9, 122,  94, 107, 116,  81,  79,  53,  91,
#         126,  72, 124,  32,  35,  96,  62],
#        [ 35,  66,  91,  50,  30, 125,  81,  79, 115,  68, 116,   8,  34,
#          20,  26, 122, 101,  23,  81,  82],
#        [ 39,  32,  52, 119, 124,  36,  42,  63,  12,  71,  77,  90,  50,
#          76,  65,  28,  42,   3,  39,  78],
#        [ 77, 104, 103,  43,  97,  77,  27,  31, 114,  64,  35,  93,  72,
#          85,  36,   0,  26,  83,  63,  45],
#        [ 90,  14,  75,  99,  88, 116, 100, 119,  73,  72, 121,  46, 105,
#          80,  93,  69,  89, 113, 118,  10],
#        [ 17,  75,  73, 107,  33, 112,  99,  53,  38, 112, 102,  45, 115,
#          30, 118,  12,  42,  94,  17,  61],
#        [ 38,  78, 116, 115, 120,   5, 107,  24,  16,  56, 119, 114,  11,
#          81,   3,   5,  15,  78,  45, 111],
#        [ 64,  52,  85,  26,  36,  50,  28,  82,  24,  91, 120,   7,  12,
#          37,  29,  28, 101, 113,  22,   5],
#        [114,  70,  69,  22,  34, 119,  58,  83,  41,  22,  87,   1,  20,
#          19,  53,  52, 109, 106, 108,  37],
#        [ 18,  67, 107,  93,  70, 106,  99,  42,  97,  19, 104, 107,  12,
#          82,  64, 126, 120,  39,  17,  25],
#        [118,  16,  70, 110, 125,  20,  84,  12, 119,   0, 110, 104,  30,
#          80,  33,  87, 122,  67, 101,  47],
#        [ 85,   5,  35, 116,  22,  51,  52,   4,  89, 116,  59,   0,  63,
#           6,  77,  21,  18,  62, 108,  99],
#        [ 31, 119, 122,   3, 126,  64,   7,  84, 120,  25,  34,  12,  39,
#         114,  50,  38, 116,  77,  82,  10],
#        [ 81,   8, 114,  40,  81,  44,  50,  18,  35,  20,  52, 100,  65,
#          30,  29,  52,  51,  40,  52,  34],
#        [115,  28, 106,  11, 124,  18,  91,  80,  73,  32,  96,  73,  96,
#          94,  28,  58,  67,  56, 108,  21],
#        [ 73,  87,  93,   9,  92,  78,  53,  51,  59,  37,  77,  95,  54,
#           6, 113,  88,  16, 108, 117,  32],
#        [ 25,  72,   4,  73,  32,  42,  15, 106, 113,  25,  28, 118,  74,
#          32,  51,   4,  31, 111,  85,  81],
#        [ 26, 110,  73, 106,  13, 126,  97,  96,  72,  35, 126,  83, 116,
#         117,  12, 104,  25, 103,  20,  46],
#        [ 64,   1,  88,  54,  93,  46,  89,  27,  46,  74, 113,  75,  69,
#          34, 117,  86,   3,  89,  63,  20]], dtype='int64'), np.array([[117,  99,   2,  36,  55, 101, 121,  74,  72,  72,  57,  40,  89,
#          14, 107,  63,  38, 116, 123,  47],
#        [ 47,  42,  24,   0,  67,   3,  92,  92,  96,  29,  69,  53,  45,
#          60,  45,  94, 102,  24, 103,  43],
#        [ 34,  75,  34,   2, 111,  55,  13, 119, 108,  86,  85,  36, 122,
#         103,  50,  60,  48,  30,  65, 101],
#        [ 68,  44,  65,  65,  28, 125,  92, 111, 110,   5, 108,  10,   2,
#          80, 113, 103,  59,  33,  62,  21],
#        [ 54,   2,  84,  80,  19,   4,  73, 109,  16,  88,  97,  33,  32,
#          22,  82,  89,  50,   4,  34,  77],
#        [111, 111,  78,  32,  95,  67,  87,  14,  25, 122,  77, 123, 100,
#         117,  50, 121,  67,  30,   6,  42],
#        [ 62,  37,  26, 111,  85, 121,  80, 117,  29,  49, 108, 112,  39,
#          69,  42,  92,  33,  67,  89,  89],
#        [ 81,   1,  13,  87, 119,  68,  18,  53,  30,  16,  70, 122,  92,
#         103,  38, 104,  69,  76,  64,  94],
#        [ 35,  43,  93,  31,  86,  56, 106,  60,  18, 103, 125,   6,   7,
#         102,  39,  85,  23,  51,  97, 120],
#        [ 20,   5,  12, 110,   8,  86,  65, 120, 124,   3,  85,  53,  53,
#           1,   0,  72, 115, 103, 117,  85],
#        [ 46,   9, 120,  53,  68,   6,  37, 124,  94, 115,  71,  13,  31,
#          35,  96,  99,  91,  49, 118,  19],
#        [ 94,  88,  92,  32,  97,  32, 114,  46,  69,  41,  60,  52,  31,
#         106,  66,  50,  71,  78,  51,  41],
#        [124,   9,  24,  62,  94,  36,  26, 112,  77, 114,  32,  39,   8,
#          36,  15,  83,  67,  42,   6,  46],
#        [113,  63,  34, 122,  62,  70,  24,  63,  33,  90,  78, 108, 107,
#         126,  46, 105,  66,  81,  42, 107],
#        [120,  85,  48, 110,  65, 115,  10,  74,  27,  84,  44,  16, 117,
#          87,  87,  17,  79,  48,  58,  84],
#        [ 24,  13, 108, 119,  75, 126,  82,  71, 106,  80,  21,  16,  40,
#          26,  91,  58, 102,  34,  86,  37],
#        [ 21, 102,  10,  26, 113,  14,  23,  58,  25,  25,  64,  21, 109,
#          16,   0, 124, 121,  38, 118,   0],
#        [ 46, 108,  84, 116, 109,   3,  36,  71, 111,  27,  72,  13, 110,
#         106,   1, 106,  53,   4,  38, 105],
#        [ 69, 121,  42,  92,  97,  53,   1,  45,  48,  97,  19,  62,  19,
#          29,  85,  27, 121,  86,  69,  42],
#        [ 25,  35,   2,  98,  51,  46,  95, 102, 108, 117,  19,   0,  23,
#          67,  80,  24,  55,  51, 105,  12]], dtype='int64'), np.array([[ 62, 122,  69,  80,  10,  43,  84,   5,  44,  22,  95,  73,  12,
#          91,  30,  86,  26, 105,  85,   6],
#        [ 43,  51,  31,  75, 118,  57,  18,   9,  74, 106,  20,  82,  83,
#          47,  62,  40,  19,  73,  22,  72],
#        [ 46,  85, 114, 100,  59, 113,  87,  36,  57,  69,  81,   9,  27,
#          20,   3,  42,  84,  92,  14,  10],
#        [ 43, 101,  77, 125,  35,  32,  97, 107,  19,   9,  92,  63, 106,
#          30,  39, 103,  33,  99, 105,   7],
#        [ 40,  59, 109,  90,  19,  72,  65,  41,  53,   7,  22,  72, 103,
#          42, 107,  54,  56,  19,  49,  12],
#        [ 56, 116,  60, 102,  82,  30,  44,   0,   8,  28,  71,  13,  67,
#          14, 114,   6,  12,  83,  68, 111],
#        [ 79, 107,  67,  73,  45,  70,  35,   8,  19,  65,   8,  68,  98,
#          34,  25, 110,  26,  55, 114,  69],
#        [ 87,  62,  46,  53, 118,  51,  35,  29,  62,  94,  16,  28,  31,
#          64,   5, 108,  30,  69,  49,  92],
#        [ 43,  56,   8,  69,  30,  28,  42, 100,  70,  43, 121,  34, 100,
#          41,  16,  73,  78, 124,  85,   3],
#        [ 64,  41,  38,   5,  67, 126,  48,  61,  30,  35,   6, 121,  80,
#          93,  44,  47,  44,  81,  99, 110],
#        [ 68,  89,  29,   3,  43,  56,  21,  71, 116,  30,  81,  64,   6,
#          13, 126,  85,  11,  26, 108, 121],
#        [120, 112,  64,  37, 111, 106,  43,  32,  92,  39,  44,  70, 113,
#          67,  12,  19,  29,  90,   7,  90],
#        [ 90, 111,  63,  28,  30,  64,  67,  83,  43,  62,  76,  58, 120,
#         108,  50,  78,   8,  78,  27,  70],
#        [ 80,  82,  93,  65,  75,  74,  12,  85, 120,  91,  36,  32,   9,
#         105, 101,  23,  94,  75,  54, 115],
#        [ 47,  31, 111,  46,  45,  98,  90,  84,  26, 108,  92,  10,  74,
#          81,  22,  45, 126,  70,  26,  20],
#        [100,   0,   6,  32, 124, 104,  37,  18,  67,  76,  87,   7,   2,
#         103, 104,  93,  65,  78,  29,  70],
#        [ 79,  88,  88,  73,  31,  61,  29,  20, 108,  83,  34,  51,  74,
#         111,  10, 112,  13, 108,  48,  84],
#        [103,  32,  14,  70,  54, 107,  47,  67,  74,  99,  28,  81,  15,
#          33,  58,  27, 120,  42, 104,   3],
#        [ 88,  66,  86,   9,  82,  88,  57,   7,  88,  31,  76,  22, 117,
#          64,  53,  60,  89,  85,  42,  98],
#        [106,  67,  48,  74, 109,  48,  95, 123,   5,  35,  50, 109,  68,
#           8, 107,  77,  96, 100,  61,  92]], dtype='int64'), np.array([[ 94, 103,  96,  91,  55,  77, 116, 122,  86,  63,  52,  82,  32,
#          25, 121,  62,   5, 102,  12,   0],
#        [ 85,  43,  91,  13,  72,  40,  57,  20,  82,  83,  60,  96, 100,
#          60,   6,  13,  13,  67,   1,  56],
#        [  8,  32, 114,  94, 124, 107,  17, 110,  63, 114,  90,  91,  24,
#         106,  73,  48,  49,  19, 112,  94],
#        [ 66,  20,  90,  66,  25,  73,  62, 100,   4,  15,  22,  20,  44,
#          97, 126,  78,   8,  13,  43,   0],
#        [ 77,  81,  25,  28,  43,  96, 107,  98,  90, 104, 101,  40,  50,
#          48,  11,  59,  24, 123,  55,  12],
#        [  4,  33,  61,  41,  81,  76,  71,  21,  45, 108,  96,  10,  77,
#          23,  86,  20, 100,  61,  71,  51],
#        [122, 119,  79,  57,   7,  71, 107,  60,  56,  74,  88, 126, 101,
#          31,  65,  16,  14,   7,  86,  94],
#        [111, 125,  32,  45,  12,  30,  11,  77,  96,  68,  39,  50, 102,
#           9,  58,  94, 100,  16,  98, 124],
#        [ 87,  37,  90,   8,  57, 103,  11,   2, 115,  51,   9,  47, 116,
#           3,  57,  14,  40,  66,  71,  81],
#        [ 48,  95,  58,  87, 125,  34,   1,  74, 123, 108,  71,  78,  93,
#          66,  71,  48,   9, 115,  77,   9],
#           2,  47,   5, 120,  77,  44,  37],
#        [109,  14, 109,  82,  72,  70,  58,   1,  50, 112,  22,  69,  15,
#          54,  72,  57, 121,  11, 118,  22],
#        [ 81,  36, 119,  23, 125,  43,  29,  43, 110,  68,  74,  66,  52,
#          58,  66, 113,   8, 103,  76, 105],
#        [ 94,  23,  96,  90,  24,  78,  89,  52,  41,  31,  98, 117,  74,
#         103,  28, 106,  68,  98,  12, 103],
#        [ 80, 107,  35,  77,   5,  91,  13, 122,  66,  19, 102, 120, 123,
#         108,  69,  15,  11,  40,  23, 105],
#        [ 64,  97, 114,  50,  15, 109,  72,  95,  40,  67, 110,  81, 109,
#          32,  57, 124,  28,  59,  37,  90],
#        [ 11,  35, 124,  21,  95,   8,  35,  79,  39,   6,  51,  48,  10,
#         111, 103,  50,  14,  57,  52, 113]], dtype='int64')]

def encrypt(p,k):
    n = len(p)
    p_list = []
    if n<=chunk_size:
        for i in list(p):
            p_list.append(ord(i))
        p_list.extend([126]*(chunk_size-n))
        print(p_list)
        p_vec = ModMatix(np.array([p_list]).T,base)
        return vectoascii(vec_encrypt(p_vec,k))
    if n>chunk_size:
        t = empty(base)
        while len(p)>0:
            t.vec_concat(encrypt(p[:chunk_size],k))
            p = p[chunk_size:]
        return vectoascii(t)
    
def decrypt(t,k):
    k.inv()
    return encrypt(t,k).rstrip(chr(126))

##### test

karr = np.identity(20,dtype='int64')
k = ModMatix(karr,base)
t = encrypt("I am a disco dancer.",k)
print(t)
decrypt(t,k)






    
